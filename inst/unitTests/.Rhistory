library(MetCirc)
data("binnedMSP", package = "MetCirc")
binnedMSP <- binnedMSP[c(1:20, 29:48, 113:132, 240:259),]
mass <- colnames(binnedMSP)
checkEquals(NDP(binnedMSP[1,], binnedMSP[1,], mass = mass), 1)
library(RUnit)
checkEquals(NDP(binnedMSP[1,], binnedMSP[1,], mass = mass), 1)
checkEquals(NDP(binnedMSP[1,], binnedMSP[2,], mass = mass), 0.7980518,
tolerance = 0.000001)
checkEquals(NDP(binnedMSP[2,], binnedMSP[1,], mass = mass), 0.7980518,
tolerance = 0.000001)
checkEquals(NDP(binnedMSP[1,], binnedMSP[2,], mass = mass),
NDP(binnedMSP[2,], binnedMSP[1,], mass = mass))
checkException(NDP(binnedMSP[1,], binnedMSP[2,], mass = c(0:10)))
checkException(NDP(binnedMSP[1,1:10], binnedMSP[2,], mass = mass))
}
simMat <- createSimilarityMatrix(binnedMSP)
checkEquals(dim(simMat)[1], dim(binnedMSP)[1])
checkEquals(dim(simMat)[2], dim(binnedMSP)[1])
checkEquals(colnames(simMat), rownames(simMat))
checkEquals(rownames(simMat), rownames(binnedMSP))
colnames(simMat)
rownames(simMat)
checkEquals(colnames(simMat), rownames(simMat))
checkEquals(rownames(simMat), rownames(binnedMSP))
rownames(simMat)
checkEquals(rownames(simMat), sort(rownames(binnedMSP)))
checkTrue(is.numeric(simMat))
checkTrue(is.matrix(simMat))
