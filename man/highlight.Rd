% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingFunctions.R
\name{highlight}
\alias{highlight}
\title{Add links and highlight sectors}
\usage{
highlight(dfNameGroup, ind, LinkMatrix)
}
\arguments{
\item{dfNameGroup}{data.frame , data.frame with group and unique idenfier 
(name)}

\item{ind}{numerical, indices which will be highlighted}

\item{LinkMatrix}{matrix, in each row there is information about features 
to be connected}
}
\value{
The function will update an existing plot by highlighting a 
 specified sector and connected links.
}
\description{
A function to add links and highlight sectors to an initialised
     and plotted \code{circlize} plot with one track.
}
\details{
Internal use for shiny app.
}
\examples{
 ## load binnedMSP
 data("binnedMSP", package = "MetabolomicTools")
 data("similarityMat", package = "MetabolomicTools")
 namesPrec <- rownames(binnedMSP)

 dfNameGroup <- data.frame(group = unlist(lapply(strsplit(namesPrec, "_"), "[[", 1)), 
     name = namesPrec) 
 
 ## order according to compartment
 dfNameGroup <- dfNameGroup[order(dfNameGroup[,"group"]),] 
 dfNameGroupRT <- orderNames(dfNameGroup = dfNameGroup, 
     similarityMatrix = NULL, order = "retentionTime")
     
 ## create a new similarity matrix with updated rownames
 simM <- createOrderedSimMat(dfNameGroupRT, similarityMat)
 ## create link matrix
 linkMat <- createLinkMatrix(similarityMatrix = simM, threshold=0.95,
     dfNameGroup = dfNameGroupRT)
 ## cut link matrix (here: only display links between groups)
 linkMat_cut <- cutLinkMatrix(linkMat, type = "inter")
 ## set circlize paramters
 circos.par(gap.degree = 0, cell.padding = c(0.0, 0, 0.0, 0), 
         track.margin = c(0.0, 0))
 ## here set selectedFeatures arbitrarily
 selectedFeatures <- as.character(dfNameGroupRT[c(1,101,201,301),2])
 
 ## actual plotting
 plotCircos(dfNameGroupRT, linkMat_cut, initialize = TRUE, 
     featureNames = TRUE, cexFeatureNames = 0.2, groupName = TRUE, 
     links = FALSE, highlight = TRUE)
 indSelected <- mapply(function(x) which(x == dfNameGroupRT$name), 
         selectedFeatures)
 ## highlight
 highlight(dfNameGroup = dfNameGroupRT, ind = indSelected, LinkMatrix = 
         linkMat_cut)
}
\author{
Thomas Naake, \email{naake@stud.uni-heidelberg.de}
}

